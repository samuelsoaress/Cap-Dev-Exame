[
    {
        "code": "1",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "G"
    },
    {
        "code": "2",
        "technology": "Spring",
        "complexity": "basic",
        "firstPart": "Spring basic enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "3",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic enunciado",
        "codeParts": [
            "public class Jogo {",
            "//Código omitido",
            "   private Componente comp;",
            "   public Jogo(Usuario usuario){",
            "   this.comp = usuario;",
            "   }",
            "}"
        ],
        "lastPart": "Qual dos motivos abaixo explica a razão desse acontecimento?",
        "answers": [
            {
                "letter": "A",
                "text": "Não podemos atribuir porque é um elemento privado."
            },
            {
                "letter": "B",
                "text": "O uso da palavra reservada this está errado."
            },
            {
                "letter": "C",
                "text": "Os atributos não podem ter o mesmo nome"
            },
            {
                "letter": "D",
                "text": "Está sendo feita uma atribuição de objetos de tipos diferentes."
            },
            {
                "letter": "E",
                "text": "Nenhuma das alternativas."
            }
        ],
        "correctAnswer": "D"
    },
    {
        "code": "4",
        "technology": "Java",
        "complexity": "medium",
        "firstPart": "Java medium enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "5",
        "technology": "Spring",
        "complexity": "medium",
        "firstPart": "Spring medium enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "6",
        "technology": "Java",
        "complexity": "medium",
        "firstPart": "Java medium enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "7",
        "technology": "Java",
        "complexity": "hard",
        "firstPart": "Java hard enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "8",
        "technology": "Spring",
        "complexity": "hard",
        "firstPart": "Spring hard enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "9",
        "technology": "Java",
        "complexity": "hard",
        "firstPart": "Java hard enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "10",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic 2 enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "11",
        "technology": "Spring",
        "complexity": "basic",
        "firstPart": "Spring basic 2 enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "12",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic 2 enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "13",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "G"
    },
    {
        "code": "14",
        "technology": "Spring",
        "complexity": "basic",
        "firstPart": "Spring basic enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "15",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic enunciado",
        "codeParts": [
            "public class Jogo {",
            "//Código omitido",
            "   private Componente comp;",
            "   public Jogo(Usuario usuario){",
            "   this.comp = usuario;",
            "   }",
            "}"
        ],
        "lastPart": "Qual dos motivos abaixo explica a razão desse acontecimento?",
        "answers": [
            {
                "letter": "A",
                "text": "Não podemos atribuir porque é um elemento privado."
            },
            {
                "letter": "B",
                "text": "O uso da palavra reservada this está errado."
            },
            {
                "letter": "C",
                "text": "Os atributos não podem ter o mesmo nome"
            },
            {
                "letter": "D",
                "text": "Está sendo feita uma atribuição de objetos de tipos diferentes."
            },
            {
                "letter": "E",
                "text": "Nenhuma das alternativas."
            }
        ],
        "correctAnswer": "D"
    },
    {
        "code": "16",
        "technology": "Java",
        "complexity": "medium",
        "firstPart": "Java medium enunciado",
        "codeParts": [
            "TESTE16 MEDIUM",
            "TESTE16 MEDIUM",
            "TESTE16 MEDIUM",
            "TESTE16 MEDIUM",
            "TESTE16 MEDIUM",
            "TESTE16 MEDIUM",
            "TESTE16 MEDIUM",
            "TESTE16 MEDIUM",
            "TESTE16 MEDIUM"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "TESTE16 MEDIUM"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "17",
        "technology": "Spring",
        "complexity": "medium",
        "firstPart": "Spring medium enunciado",
        "codeParts": [
            "TESTE17 MEDIUM",
            "TESTE17 MEDIUM",
            "TESTE17 MEDIUM",
            "TESTE17 MEDIUM",
            "TESTE17 MEDIUM",
            "TESTE17 MEDIUM",
            "TESTE17 MEDIUM",
            "TESTE17 MEDIUM",
            "TESTE17 MEDIUM"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "TESTE17 MEDIUM"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "B"
    },
    {
        "code": "18",
        "technology": "Java",
        "complexity": "medium",
        "firstPart": "Java medium enunciado",
        "codeParts": [
            "TESTE18 MEDIUM",
            "TESTE18 MEDIUM",
            "TESTE18 MEDIUM",
            "TESTE18 MEDIUM",
            "TESTE18 MEDIUM",
            "TESTE18 MEDIUM",
            "TESTE18 MEDIUM",
            "TESTE18 MEDIUM",
            "TESTE18 MEDIUM"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "TESTE18 MEDIUM"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "C"
    },
    {
        "code": "19",
        "technology": "Java",
        "complexity": "hard",
        "firstPart": "Java hard enunciado",
        "codeParts": [
            "TESTE19 HARD",
            "TESTE19 HARD",
            "TESTE19 HARD",
            "TESTE19 HARD",
            "TESTE19 HARD",
            "TESTE19 HARD",
            "TESTE19 HARD",
            "TESTE19 HARD",
            "TESTE19 HARD"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "TESTE19 HARD"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "20",
        "technology": "Spring",
        "complexity": "hard",
        "firstPart": "Spring hard enunciado",
        "codeParts": [
            "TESTE20 HARD",
            "TESTE20 HARD",
            "TESTE20 HARD",
            "TESTE20 HARD",
            "TESTE20 HARD",
            "TESTE20 HARD",
            "TESTE20 HARD",
            "TESTE20 HARD",
            "TESTE20 HARD"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "TESTE20 HARD"
            },
            {
                "letter": "C",
                "text": "Imprime 1000.0"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "B"
    },
    {
        "code": "21",
        "technology": "Java",
        "complexity": "hard",
        "firstPart": "Java hard enunciado",
        "codeParts": [
            "TESTE21 HARD",
            "TESTE21 HARD",
            "TESTE21 HARD",
            "TESTE21 HARD",
            "TESTE21 HARD",
            "TESTE21 HARD",
            "TESTE21 HARD",
            "TESTE21 HARD",
            "TESTE21 HARD"
        ],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Imprime 1500.0"
            },
            {
                "letter": "B",
                "text": "Imprime 500.0"
            },
            {
                "letter": "C",
                "text": "TESTE21 HARD"
            },
            {
                "letter": "D",
                "text": "Imprime 2000.0"
            },
            {
                "letter": "E",
                "text": "Imprime 5000.0"
            }
        ],
        "correctAnswer": "C"
    },
    {
        "code": "22",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic 2 enunciado",
        "codeParts": [
            "TESTE22 BASIC",
            "TESTE22 BASIC",
            "TESTE22 BASIC",
            "TESTE22 BASIC",
            "TESTE22 BASIC",
            "TESTE22 BASIC",
            "TESTE22 BASIC",
            "TESTE22 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "TESTE22 BASIC"
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "23",
        "technology": "Spring",
        "complexity": "basic",
        "firstPart": "Spring basic 2 enunciado",
        "codeParts": [
            "TESTE23 BASIC",
            "TESTE23 BASIC",
            "TESTE23 BASIC",
            "TESTE23 BASIC",
            "TESTE23 BASIC",
            "TESTE23 BASIC",
            "TESTE23 BASIC",
            "TESTE23 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "TESTE23 BASIC"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "B"
    },
    {
        "code": "24",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic 2 enunciado",
        "codeParts": [
            "TESTE24 BASIC",
            "TESTE24 BASIC",
            "TESTE24 BASIC",
            "TESTE24 BASIC",
            "TESTE24 BASIC",
            "TESTE24 BASIC",
            "TESTE24 BASIC",
            "TESTE24 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "TESTE24 BASIC"
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "C"
    },
    {
        "code": "25",
        "technology": "Spring",
        "complexity": "basic",
        "firstPart": "Spring basic 2 enunciado",
        "codeParts": [
            "TESTE25 BASIC",
            "TESTE25 BASIC",
            "TESTE25 BASIC",
            "TESTE25 BASIC",
            "TESTE25 BASIC",
            "TESTE25 BASIC",
            "TESTE25 BASIC",
            "TESTE25 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "TESTE25 BASIC"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "B"
    },
    {
        "code": "26",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic 2 enunciado",
        "codeParts": [
            "TESTE26 BASIC",
            "TESTE26 BASIC",
            "TESTE26 BASIC",
            "TESTE26 BASIC",
            "TESTE26 BASIC",
            "TESTE26 BASIC",
            "TESTE26 BASIC",
            "TESTE26 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "TESTE26 BASIC"
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "C"
    },
    {
        "code": "27",
        "technology": "Spring",
        "complexity": "basic",
        "firstPart": "Spring basic 2 enunciado",
        "codeParts": [
            "TESTE27 BASIC",
            "TESTE27 BASIC",
            "TESTE27 BASIC",
            "TESTE27 BASIC",
            "TESTE27 BASIC",
            "TESTE27 BASIC",
            "TESTE27 BASIC",
            "TESTE27 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "TESTE27 BASIC"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "B"
    },
    {
        "code": "28",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic 2 enunciado",
        "codeParts": [
            "TESTE28 BASIC",
            "TESTE28 BASIC",
            "TESTE28 BASIC",
            "TESTE28 BASIC",
            "TESTE28 BASIC",
            "TESTE28 BASIC",
            "TESTE28 BASIC",
            "TESTE28 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "TESTE28 BASIC"
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "C"
    },
    {
        "code": "29",
        "technology": "Cobol",
        "complexity": "basic",
        "firstPart": "Spring basic 2 enunciado",
        "codeParts": [
            "TESTE29 Cobol",
            "TESTE29 BASIC",
            "TESTE29 BASIC",
            "TESTE29 BASIC",
            "TESTE29 BASIC",
            "TESTE29 BASIC",
            "TESTE29 BASIC",
            "TESTE29 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "TESTE29 BASIC"
            },
            {
                "letter": "C",
                "text": "Exibe XY e finaliza quase imediatamente."
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "B"
    },
    {
        "code": "30",
        "technology": "Java",
        "complexity": "basic",
        "firstPart": "Java basic 2 enunciado",
        "codeParts": [
            "TESTE30 BASIC",
            "TESTE30 BASIC",
            "TESTE30 BASIC",
            "TESTE30 BASIC",
            "TESTE30 BASIC",
            "TESTE30 BASIC",
            "TESTE30 BASIC",
            "TESTE30 BASIC"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {
                "letter": "A",
                "text": "Exibe X e finaliza."
            },
            {
                "letter": "B",
                "text": "Exibe X e nunca finaliza"
            },
            {
                "letter": "C",
                "text": "TESTE30 BASIC"
            },
            {
                "letter": "D",
                "text": "Exibe XY com um atraso de 10 segundos entre X e Y."
            },
            {
                "letter": "E",
                "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."
            },
            {
                "letter": "F",
                "text": "O código não compila."
            },
            {
                "letter": "G",
                "text": "É lançada uma exceção no tempo de execução."
            }
        ],
        "correctAnswer": "C"
    },
    {
        "code": "31",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "Como é possível acessar o valor de um managed bean em uma página XHTML?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Através dos elementos ${bean.elemento} na página"
            },
            {
                "letter": "B",
                "text": "Através do elemento #{bean.elemento} na página"
            },
            {
                "letter": "C",
                "text": "Através de um scriptlet (<%=bean.elemento%>)"
            },
            {
                "letter": "D",
                "text": "Através de um scriptlet (<%bean.elemento%>)"
            }
        ],
        "correctAnswer": "B"
    },
    {
        "code": "32",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "Quais das seguintes formas não é uma maneira válida de declarar um bean JSF?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Através da tag “managed-bean” no faces-config.xml"
            },
            {
                "letter": "B",
                "text": "Através da annotation “@ManagedBean”"
            },
            {
                "letter": "C",
                "text": "Declarando-o como um bean CDI com a annotation “@Named”"
            },
            {
                "letter": "D",
                "text": "Declarando o no web.xml com a tag “managed-bean”"
            }
        ],
        "correctAnswer": "D"
    },
    {
        "code": "33",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "Qual dos seguintes componentes abaixo é um componente de entrada no JSF?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "   f:view"
            },
            {
                "letter": "B",
                "text": "h:selectOneMenu"
            },
            {
                "letter": "C",
                "text": "h:outputText"
            },
            {
                "letter": "D",
                "text": "h:panelGrid"
            }
        ],
        "correctAnswer": "B"
    },
    {
        "code": "34",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "Action e actionListener são elementos JSF utilizados para execução de comandos da aplicação. Qual deles aciona navegação?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "action"
            },
            {
                "letter": "B",
                "text": "actionListener"
            },
            {
                "letter": "C",
                "text": "Ambos"
            },
            {
                "letter": "D",
                "text": "Nenhum"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "35",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "JSF possui diferente escopos para seus managed beans. Qual escopo dentre os listados abaixo é o mais duradouro (ou seja, permanece mais tempo ativo na aplicação)?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Request scoped"
            },
            {
                "letter": "B",
                "text": "View scroped"
            },
            {
                "letter": "C",
                "text": "Application scoped"
            },
            {
                "letter": "D",
                "text": "Session scoped"
            }
        ],
        "correctAnswer": "C"
    },
    {
        "code": "36",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "Qual a forma mais simples de tornar um campo obrigatório no JSF?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Efetuar a validação do mesmo no método actionListener do managed bean"
            },
            {
                "letter": "B",
                "text": "Efetuar a validação do mesmo por Javascript"
            },
            {
                "letter": "C",
                "text": "Implementar um validador"
            },
            {
                "letter": "D",
                "text": "Utilizar o atributo required"
            }
        ],
        "correctAnswer": "D"
    },
    {
        "code": "37",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "Como é possível redirecionar um usuário durante a execução de um método de “action” da aplicação no JSF?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Executar um comando getServletContext().getRequestDispatcher('acao');"
            },
            {
                "letter": "B",
                "text": "Executar um comando FacesContext.getCurrentInstance().redirect(“acao”)"
            },
            {
                "letter": "C",
                "text": "Retomar a ação"
            },
            {
                "letter": "D",
                "text": "Configurar a ação como parte do parâmetro fornecido"
            }
        ],
        "correctAnswer": "C"
    },
    {
        "code": "38",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "É possível desativar a exibição de um componente JSF?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Sim, pelo atributo “rendered”"
            },
            {
                "letter": "B",
                "text": "Não"
            },
            {
                "letter": "C",
                "text": "Sim, apenas programaticamente"
            },
            {
                "letter": "D",
                "text": "Sim, pelo atributo “display”"
            }
        ],
        "correctAnswer": "A"
    },
    {
        "code": "39",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "Que componente é utilizado para exibição de mensagens de erro em páginas JSF?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "h:inputText"
            },
            {
                "letter": "B",
                "text": "h:panelGroup"
            },
            {
                "letter": "C",
                "text": "h:outputText"
            },
            {
                "letter": "D",
                "text": "h:messages"
            }
        ],
        "correctAnswer": "D"
    },
    {
        "code": "40",
        "technology": "JSF",
        "complexity": "medium",
        "firstPart": "Para que serve a tag f:view no JSF?",
        "codeParts": [],
        "lastPart": "",
        "answers": [
            {
                "letter": "A",
                "text": "Para indicar uma página JSF"
            },
            {
                "letter": "B",
                "text": "Para indicar um trecho renderizável pelo JSF"
            },
            {
                "letter": "C",
                "text": "Para indicar um componente JSF"
            },
            {
                "letter": "D",
                "text": "Para indicar uma tela interna em frame com uma página JSF"
            }
        ],
        "correctAnswer": "B"
    }
]