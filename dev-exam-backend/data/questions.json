[
    {
        "code": "1",
        "technology": "Java",
        "complexity":"basic",
        "firstPart": "Java basic enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado?",
        "answers": [
            {"letter": "A", "text": "Exibe X e finaliza."},
            {"letter": "B", "text": "Exibe X e nunca finaliza"},
            {"letter": "C", "text": "Exibe XY e finaliza quase imediatamente."},
            {"letter": "D", "text": "Exibe XY com um atraso de 10 segundos entre X e Y."},
            {"letter": "E", "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."},
            {"letter": "F", "text": "O código não compila."},
            {"letter": "G", "text": "É lançada uma exceção no tempo de execução."}
        ],
        "correctAnswer": "G"
    }, {
        "code": "2",
        "technology":"Spring",
        "complexity":"basic",
        "firstPart": "Spring basic enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {"letter": "A", "text": "Exibe X e finaliza."},
            {"letter": "B", "text": "Exibe X e nunca finaliza"},
            {"letter": "C", "text": "Exibe XY e finaliza quase imediatamente."},
            {"letter": "D", "text": "Exibe XY com um atraso de 10 segundos entre X e Y."},
            {"letter": "E", "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."},
            {"letter": "F", "text": "O código não compila."},
            {"letter": "G", "text": "É lançada uma exceção no tempo de execução."}
        ],
        "correctAnswer": "A"
    }, {
        "code": "3",
        "technology":"JSF",
        "complexity":"basic",
        "firstPart": "JSF basic enunciado",
        "codeParts": [
            "public class Jogo {",
            "//Código omitido",
            "   private Componente comp;",
            "   public Jogo(Usuario usuario){",
            "   this.comp = usuario;",
            "   }",
            "}"
        ],
        "lastPart": "Qual dos motivos abaixo explica a razão desse acontecimento?",
        "answers": [
            {"letter": "A", "text": "Não podemos atribuir porque é um elemento privado."},
            {"letter": "B", "text": "O uso da palavra reservada this está errado."},
            {"letter": "C", "text": "Os atributos não podem ter o mesmo nome"},
            {"letter": "D", "text": "Está sendo feita uma atribuição de objetos de tipos diferentes."},
            {"letter": "E", "text": "Nenhuma das alternativas."}
        ],
        "correctAnswer": "D"
    }, {
        "code": "4",
        "technology":"Java",
        "complexity":"medium",
        "firstPart": "Java medium enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {"letter": "A", "text": "Imprime 1500.0"},
            {"letter": "B", "text": "Imprime 500.0"},
            {"letter": "C", "text": "Imprime 1000.0"},
            {"letter": "D", "text": "Imprime 2000.0"},
            {"letter": "E", "text": "Imprime 5000.0"}         
        ],
        "correctAnswer": "A"
    }, {
        "code": "5",
        "technology":"Spring",
        "complexity":"medium",
        "firstPart": "Spring medium enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {"letter": "A", "text": "Imprime 1500.0"},
            {"letter": "B", "text": "Imprime 500.0"},
            {"letter": "C", "text": "Imprime 1000.0"},
            {"letter": "D", "text": "Imprime 2000.0"},
            {"letter": "E", "text": "Imprime 5000.0"}         
        ],
        "correctAnswer": "A"
    }, {
        "code": "6",
        "technology":"JSF",
        "complexity":"medium",
        "firstPart": "JSF medium enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {"letter": "A", "text": "Imprime 1500.0"},
            {"letter": "B", "text": "Imprime 500.0"},
            {"letter": "C", "text": "Imprime 1000.0"},
            {"letter": "D", "text": "Imprime 2000.0"},
            {"letter": "E", "text": "Imprime 5000.0"}         
        ],
        "correctAnswer": "A"
    }, {
        "code": "7",
        "technology":"Java",
        "complexity":"hard",
        "firstPart": "Java hard enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {"letter": "A", "text": "Imprime 1500.0"},
            {"letter": "B", "text": "Imprime 500.0"},
            {"letter": "C", "text": "Imprime 1000.0"},
            {"letter": "D", "text": "Imprime 2000.0"},
            {"letter": "E", "text": "Imprime 5000.0"}         
        ],
        "correctAnswer": "A"
    }, {
        "code": "8",
        "technology":"Spring",
        "complexity":"hard",
        "firstPart": "Spring hard enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {"letter": "A", "text": "Imprime 1500.0"},
            {"letter": "B", "text": "Imprime 500.0"},
            {"letter": "C", "text": "Imprime 1000.0"},
            {"letter": "D", "text": "Imprime 2000.0"},
            {"letter": "E", "text": "Imprime 5000.0"}         
        ],
        "correctAnswer": "A"
    }, {
        "code": "9",
        "technology":"JSF",
        "complexity":"hard",
        "firstPart": "JSF hard enunciado",
        "codeParts": [
            "public class Teste {",
            "   public static void main(String [] args) {",
            "       Conta minhaConta = new Conta();",
            "       minhaConta.saldo = 500.0;",
            "       Conta outraConta = minhaConta;",
            "       outraConta.saldo += 1000.0;",
            "       System.out.println(minhaConta.saldo);",
            "   }",
            "}"
        ],
        "lastPart": "",
        "answers": [
            {"letter": "A", "text": "Imprime 1500.0"},
            {"letter": "B", "text": "Imprime 500.0"},
            {"letter": "C", "text": "Imprime 1000.0"},
            {"letter": "D", "text": "Imprime 2000.0"},
            {"letter": "E", "text": "Imprime 5000.0"}         
        ],
        "correctAnswer": "A"
    }, {
        "code": "10",
        "technology":"Java",
        "complexity":"basic",
        "firstPart": "Java basic 2 enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {"letter": "A", "text": "Exibe X e finaliza."},
            {"letter": "B", "text": "Exibe X e nunca finaliza"},
            {"letter": "C", "text": "Exibe XY e finaliza quase imediatamente."},
            {"letter": "D", "text": "Exibe XY com um atraso de 10 segundos entre X e Y."},
            {"letter": "E", "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."},
            {"letter": "F", "text": "O código não compila."},
            {"letter": "G", "text": "É lançada uma exceção no tempo de execução."}
        ],
        "correctAnswer": "A"
    }, {
        "code": "11",
        "technology":"Spring",
        "complexity":"basic",
        "firstPart": "Spring basic 2 enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {"letter": "A", "text": "Exibe X e finaliza."},
            {"letter": "B", "text": "Exibe X e nunca finaliza"},
            {"letter": "C", "text": "Exibe XY e finaliza quase imediatamente."},
            {"letter": "D", "text": "Exibe XY com um atraso de 10 segundos entre X e Y."},
            {"letter": "E", "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."},
            {"letter": "F", "text": "O código não compila."},
            {"letter": "G", "text": "É lançada uma exceção no tempo de execução."}
        ],
        "correctAnswer": "A"
    }, {
        "code": "12",
        "technology":"JSF",
        "complexity":"basic",
        "firstPart": "JSF basic 2 enunciado",
        "codeParts": [
            "public static synchronized void(String[] args) throws",
            "InterruptedException {",
            "   Thread t = new Thread();",
            "   t.start();",
            "   System.out.println(\"X\")",
            "   t.wait(10000);",
            "   System.out.println(\"Y\")",
            "}"
        ],
        "lastPart": "Qual é o resultado desse código?",
        "answers": [
            {"letter": "A", "text": "Exibe X e finaliza."},
            {"letter": "B", "text": "Exibe X e nunca finaliza"},
            {"letter": "C", "text": "Exibe XY e finaliza quase imediatamente."},
            {"letter": "D", "text": "Exibe XY com um atraso de 10 segundos entre X e Y."},
            {"letter": "E", "text": "Exibe XY com um atraso de 10000 segundos entre X e Y."},
            {"letter": "F", "text": "O código não compila."},
            {"letter": "G", "text": "É lançada uma exceção no tempo de execução."}
        ],
        "correctAnswer": "A"
    }
]